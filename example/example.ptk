arch { 
  cluster:node:cpu:core:thread:vector
                  :thread:vector
                  :vector
  cluster:node:accel:team:thread:vector
                    :thread:vector
} supercomputer as default

cpu kernel on thread (array A B C, scalar N){
  space {
    lowerbound = 0
    upperbound = N
    stride     = 1 
  } i

  C[i] = A[i] + B[i]
} mykernelcpu

supercomputer: accel kernel on teams (array A B C, scalar N){
  space {
    lowerbound = 0
    upperbound = N
    stride     = 1 
  } i

  A[i] = B[i] * C[i]
} mykernelaccel

cpu kernel on thread (matrix A B C, scalar N){
  space {
    lowerbound = 0
    upperbound = N
    stride     = 1 
  } i j

  C[i][j] = A[i][j] + B[i][j]
} mykernelmatrices

cpu kernel on thread (matrix A B C, scalar N){
  space {
    lowerbound = 0
    upperbound = N
    stride     = 1 
  } i j

  dimension k = i

  C[i][j] += A[i][k] + B[k][j]
} matmul
